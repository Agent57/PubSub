// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RemoteSubscription.proto

#ifndef PROTOBUF_RemoteSubscription_2eproto__INCLUDED
#define PROTOBUF_RemoteSubscription_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
// ToDo: Requires protoc plugin to auto generate next line
#include "../../Framework/InternalMessage.h"

namespace Exchange {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RemoteSubscription_2eproto();
void protobuf_AssignDesc_RemoteSubscription_2eproto();
void protobuf_ShutdownFile_RemoteSubscription_2eproto();

class RemoteSubscription;

// ===================================================================

// ToDo: Requires protoc plugin to modify %super_class% defnition
class RemoteSubscription : public InternalMessage, public std::enable_shared_from_this<RemoteSubscription> {
 public:
  RemoteSubscription();
  virtual ~RemoteSubscription();

  RemoteSubscription(const RemoteSubscription& from);

  inline RemoteSubscription& operator=(const RemoteSubscription& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteSubscription& default_instance();

  void Swap(RemoteSubscription* other);

  // implements Message ----------------------------------------------

  RemoteSubscription* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoteSubscription& from);
  void MergeFrom(const RemoteSubscription& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 SubscriptionId = 1;
  inline bool has_subscriptionid() const;
  inline void clear_subscriptionid();
  static const int kSubscriptionIdFieldNumber = 1;
  inline ::google::protobuf::int32 subscriptionid() const;
  inline void set_subscriptionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Exchange.RemoteSubscription)
  // implements IMessage ----------------------------------------------
  // ToDo: Requires protoc plugin to auto generate next method
  inline bool CallHandler(const HandlerPtr& handler)
  {
    return CallHandlerTemplate(handler, shared_from_this());
  }

 private:
  inline void set_has_subscriptionid();
  inline void clear_has_subscriptionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 subscriptionid_;
  friend void  protobuf_AddDesc_RemoteSubscription_2eproto();
  friend void protobuf_AssignDesc_RemoteSubscription_2eproto();
  friend void protobuf_ShutdownFile_RemoteSubscription_2eproto();

  void InitAsDefaultInstance();
  static RemoteSubscription* default_instance_;
};
// ===================================================================


// ===================================================================

// RemoteSubscription

// required int32 SubscriptionId = 1;
inline bool RemoteSubscription::has_subscriptionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoteSubscription::set_has_subscriptionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoteSubscription::clear_has_subscriptionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoteSubscription::clear_subscriptionid() {
  subscriptionid_ = 0;
  clear_has_subscriptionid();
}
inline ::google::protobuf::int32 RemoteSubscription::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Exchange.RemoteSubscription.SubscriptionId)
  return subscriptionid_;
}
inline void RemoteSubscription::set_subscriptionid(::google::protobuf::int32 value) {
  set_has_subscriptionid();
  subscriptionid_ = value;
  // @@protoc_insertion_point(field_set:Exchange.RemoteSubscription.SubscriptionId)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Exchange

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RemoteSubscription_2eproto__INCLUDED
